# This is a basic workflow to help you get started with Actions

name: Push Pull and Workflow Dispatch

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      location:
        description: 'Location'
        required: true
        default: 'here'
        type: choice
        options:
        - here
        - there
        - everywhere

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # job 1
  set-environment:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.env-sec }}
    steps:
      - name: Set environment on branch
        id: set-env
        run: |
          # use bash (default) script to check branch that triggered wf and set environment for secrets access
          # alternatively also use github-script action: https://github.com/marketplace/actions/github-script
          echo "Branch that triggered the workflow run: $GITHUB_REF_NAME"
          echo "Event that triggered the workflow run: $GITHUB_EVENT_NAME"
          
          # https://ryanstutorials.net/bash-scripting-tutorial/bash-if-statements.php#nested
          # https://phoenixnap.com/kb/bash-if-statement#:~:text=What%20is%20the%20Bash%20if%20Statement%3F&text=Bash%20scripts%20help%20automate%20tasks,making%20process%20during%20a%20program.
          if [ "$GITHUB_EVENT_NAME" == 'push' ]
          then
            case "$GITHUB_REF_NAME" in
            develop) echo "Setting environment to develop"
                echo "::set-output name=env-sec::develop"
                ;;
            main) echo "Setting environment to main"
                echo "::set-output name=env-sec::main"
                ;;
            production) echo "Setting environment to production"
                echo "::set-output name=env-sec::production"
                ;;
            *) echo "Branch does not match any existing environments"
               ;;
            esac
          else
            echo "Some other event has triggered this workflow to run"
          fi
  
  # job 2
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: set-environment
    environment: ${{ needs.set-environment.outputs.environment }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      # https://docs.github.com/en/actions/learn-github-actions/environment-variables
      # https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      - name: Tell me what triggered this workflow run
        run: |
          echo "The branch or tag name that triggered the workflow run: $GITHUB_REF"
          echo "The branch or tag name that triggered the workflow run: $GITHUB_REF_NAME"
          echo "Other was to access branch name is ${{ github.ref_name}}"
          echo "The name of the event that triggered the workflow: $GITHUB_EVENT_NAME"
     
      # Runs a single command using the runners shell
      - name: Give me the input if it exists
        run: echo ${{ github.event.inputs.location }}
        
      - name: Give me the environment 
        run: echo "Environment is ${{ needs.set-environment.outputs.environment }}"

